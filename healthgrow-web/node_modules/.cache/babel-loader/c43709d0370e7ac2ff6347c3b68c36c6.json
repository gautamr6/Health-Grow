{"ast":null,"code":"console.log(\"hello\"); // set the dimensions and margins of the graph\n\nvar margin = {\n  top: 10,\n  right: 30,\n  bottom: 30,\n  left: 60\n},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\nvar svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); //Read the data\n\nd3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/5_OneCatSevNumOrdered.csv\", function (data) {\n  // List of groups (here I have one group per column)\n  var allGroup = d3.map(data, function (d) {\n    return d.name;\n  }).keys(); // add the options to the button\n\n  d3.select(\"#selectButton\").selectAll('myOptions').data(allGroup).enter().append('option').text(function (d) {\n    return d;\n  }) // text showed in the menu\n  .attr(\"value\", function (d) {\n    return d;\n  }); // corresponding value returned by the button\n  // A color scale: one color for each group\n\n  var myColor = d3.scaleOrdinal().domain(allGroup).range(d3.schemeSet2); // Add X axis --> it is a date format\n\n  var x = d3.scaleLinear().domain(d3.extent(data, function (d) {\n    return d.year;\n  })).range([0, width]);\n  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).ticks(7)); // Add Y axis\n\n  var y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n    return +d.n;\n  })]).range([height, 0]);\n  svg.append(\"g\").call(d3.axisLeft(y)); // Initialize line with first group of the list\n\n  var line = svg.append('g').append(\"path\").datum(data.filter(function (d) {\n    return d.name == allGroup[0];\n  })).attr(\"d\", d3.line().x(function (d) {\n    return x(d.year);\n  }).y(function (d) {\n    return y(+d.n);\n  })).attr(\"stroke\", function (d) {\n    return myColor(\"valueA\");\n  }).style(\"stroke-width\", 4).style(\"fill\", \"none\"); // A function that update the chart\n\n  function update(selectedGroup) {\n    // Create new data with the selection?\n    var dataFilter = data.filter(function (d) {\n      return d.name == selectedGroup;\n    }); // Give these new data to update line\n\n    line.datum(dataFilter).transition().duration(1000).attr(\"d\", d3.line().x(function (d) {\n      return x(d.year);\n    }).y(function (d) {\n      return y(+d.n);\n    })).attr(\"stroke\", function (d) {\n      return myColor(selectedGroup);\n    });\n  } // When the button is changed, run the updateChart function\n\n\n  d3.select(\"#selectButton\").on(\"change\", function (d) {\n    // recover the option that has been chosen\n    var selectedOption = d3.select(this).property(\"value\"); // run the updateChart function with this selected option\n\n    update(selectedOption);\n  });\n});","map":{"version":3,"sources":["/Users/ksun/Downloads/350S20-43/healthgrow-web/src/scripts.js"],"names":["console","log","margin","top","right","bottom","left","width","height","svg","d3","select","append","attr","csv","data","allGroup","map","d","name","keys","selectAll","enter","text","myColor","scaleOrdinal","domain","range","schemeSet2","x","scaleLinear","extent","year","call","axisBottom","ticks","y","max","n","axisLeft","line","datum","filter","style","update","selectedGroup","dataFilter","transition","duration","on","selectedOption","property"],"mappings":"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","sourcesContent":["console.log(\"hello\");\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 30, bottom: 30, left: 60},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//Read the data\nd3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/5_OneCatSevNumOrdered.csv\", function(data) {\n\n    // List of groups (here I have one group per column)\n    var allGroup = d3.map(data, function(d){return(d.name)}).keys()\n\n    // add the options to the button\n    d3.select(\"#selectButton\")\n      .selectAll('myOptions')\n     \t.data(allGroup)\n      .enter()\n    \t.append('option')\n      .text(function (d) { return d; }) // text showed in the menu\n      .attr(\"value\", function (d) { return d; }) // corresponding value returned by the button\n\n    // A color scale: one color for each group\n    var myColor = d3.scaleOrdinal()\n      .domain(allGroup)\n      .range(d3.schemeSet2);\n\n    // Add X axis --> it is a date format\n    var x = d3.scaleLinear()\n      .domain(d3.extent(data, function(d) { return d.year; }))\n      .range([ 0, width ]);\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(7));\n\n    // Add Y axis\n    var y = d3.scaleLinear()\n      .domain([0, d3.max(data, function(d) { return +d.n; })])\n      .range([ height, 0 ]);\n    svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n    // Initialize line with first group of the list\n    var line = svg\n      .append('g')\n      .append(\"path\")\n        .datum(data.filter(function(d){return d.name==allGroup[0]}))\n        .attr(\"d\", d3.line()\n          .x(function(d) { return x(d.year) })\n          .y(function(d) { return y(+d.n) })\n        )\n        .attr(\"stroke\", function(d){ return myColor(\"valueA\") })\n        .style(\"stroke-width\", 4)\n        .style(\"fill\", \"none\")\n\n    // A function that update the chart\n    function update(selectedGroup) {\n\n      // Create new data with the selection?\n      var dataFilter = data.filter(function(d){return d.name==selectedGroup})\n\n      // Give these new data to update line\n      line\n          .datum(dataFilter)\n          .transition()\n          .duration(1000)\n          .attr(\"d\", d3.line()\n            .x(function(d) { return x(d.year) })\n            .y(function(d) { return y(+d.n) })\n          )\n          .attr(\"stroke\", function(d){ return myColor(selectedGroup) })\n    }\n\n    // When the button is changed, run the updateChart function\n    d3.select(\"#selectButton\").on(\"change\", function(d) {\n        // recover the option that has been chosen\n        var selectedOption = d3.select(this).property(\"value\")\n        // run the updateChart function with this selected option\n        update(selectedOption)\n    })\n\n})\n\n"]},"metadata":{},"sourceType":"module"}